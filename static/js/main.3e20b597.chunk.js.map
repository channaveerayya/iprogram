{"version":3,"sources":["ImageGrid.js","InfiniteList.js","ComparisonTable.js","App.js","index.js"],"names":["useStyles","makeStyles","root","maxWidth","width","margin","height","media","ImageGrid","data","isCompare","setCompareData","classes","Grid","item","style","padding","Card","className","CardMedia","image","thumbnailUrl","title","CardContent","Typography","gutterBottom","variant","component","color","id","url","CardActions","justifyContent","Button","onClick","InfiniteList","state","compareData","handleCompareData","props","imageData","updatedData","push","find","img","filter","setState","handleScroll","e","setQuery","Math","round","div","scrollTop","scrollHeight","_start","length","_limit","this","addEventListener","overflow","container","direction","ref","justify","map","i","Component","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","black","white","body","fontSize","TableCell","StyledTableRow","action","hover","TableRow","table","minWidth","ComparisonTable","TableContainer","Paper","Table","aria-label","TableHead","align","TableBody","row","Avatar","alt","src","App","query","getApiData","axios","get","then","res","catch","console","error","Container","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e20b597.chunk.js","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardMedia,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n} from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 350,\r\n    width: 300,\r\n    margin: 'auto',\r\n    height: 400,\r\n  },\r\n  media: {\r\n    height: 150,\r\n  },\r\n})\r\n\r\nexport default function ImageGrid({ data, isCompare, setCompareData }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Grid item style={{ padding: '5px ' }}>\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={data.thumbnailUrl}\r\n          title='Contemplative Reptile'\r\n        />\r\n        <CardContent>\r\n          <Typography\r\n            gutterBottom\r\n            variant='h5'\r\n            component='h2'\r\n            style={{ height: '100px ' }}\r\n          >\r\n            {data.title}\r\n          </Typography>\r\n          <Typography variant='body2' color='textSecondary' component='p'>\r\n            ID : {data.id}\r\n          </Typography>\r\n          <Typography variant='body2' color='textSecondary' component='p'>\r\n            {data.url}\r\n          </Typography>\r\n        </CardContent>\r\n\r\n        <CardActions style={{ justifyContent: 'center' }}>\r\n          {isCompare ? (\r\n            <Button\r\n              variant='contained'\r\n              color='secondary'\r\n              onClick={() => {\r\n                setCompareData(data.id, false)\r\n              }}\r\n            >\r\n              Remove\r\n            </Button>\r\n          ) : (\r\n            <Button\r\n              variant='contained'\r\n              color='primary'\r\n              onClick={() => {\r\n                setCompareData(data.id, true)\r\n              }}\r\n            >\r\n              Compare\r\n            </Button>\r\n          )}\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport ImageGrid from './ImageGrid'\r\nimport { Grid } from '@material-ui/core'\r\nconst HEIGHT = 500\r\nexport default class InfiniteList extends Component {\r\n  state = {\r\n    compareData: [],\r\n  }\r\n  componentDidMount() {\r\n    this.div.addEventListener('scroll', this.handleScroll)\r\n  }\r\n\r\n  handleCompareData = (id, isCompare) => {\r\n    const { compareData, imageData, setCompareData } = this.props\r\n    let updatedData = compareData\r\n    isCompare\r\n      ? updatedData.push(imageData.find((img) => img.id === id))\r\n      : (updatedData = compareData.filter((img) => img.id !== id))\r\n\r\n    this.setState({ compareData: updatedData }, () => {\r\n      setCompareData(updatedData)\r\n    })\r\n  }\r\n\r\n  handleScroll = (e) => {\r\n    const { setQuery, imageData } = this.props\r\n    if (Math.round(this.div.scrollTop + HEIGHT) >= this.div.scrollHeight)\r\n      setQuery({\r\n        _start: imageData.length,\r\n        _limit: 5,\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      height: HEIGHT,\r\n      overflow: 'auto',\r\n    }\r\n    return (\r\n      <Grid\r\n        container\r\n        direction='row'\r\n        ref={(div) => (this.div = div)}\r\n        style={style}\r\n        justify='space-evenly'\r\n      >\r\n        {this.props.imageData.map((img, i) => (\r\n          <ImageGrid\r\n            item\r\n            key={i}\r\n            data={img}\r\n            isCompare={\r\n              this.state.compareData.filter((data) => img.id === data.id)\r\n                .length > 0\r\n            }\r\n            setCompareData={this.handleCompareData}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles'\r\nimport {\r\n  Avatar,\r\n  Paper,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  TableCell,\r\n  TableBody,\r\n  Table,\r\n} from '@material-ui/core'\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell)\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow)\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n})\r\n\r\nexport default function ComparisonTable({ compareData }) {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label='customized table'>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>Photo</StyledTableCell>\r\n            <StyledTableCell align='right'>ID</StyledTableCell>\r\n            <StyledTableCell align='right'>URL</StyledTableCell>\r\n            <StyledTableCell align='right'>Title</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {compareData.map((row, i) => (\r\n            <StyledTableRow key={i}>\r\n              <StyledTableCell>\r\n                <Avatar alt={row.thumbnailUrl} src={row.thumbnailUrl} />\r\n              </StyledTableCell>\r\n              <StyledTableCell align='right'>{row.id}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.url}</StyledTableCell>\r\n              <StyledTableCell align='right'>{row.title}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport { Container, Grid, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport InfiniteList from './InfiniteList'\nimport ComparisonTable from './ComparisonTable'\n\nexport default class App extends Component {\n  state = {\n    imageData: [],\n    compareData: [],\n    query: {\n      _start: 0,\n      _limit: 5,\n    },\n  }\n\n  componentDidMount() {\n    this.getApiData()\n  }\n\n  getApiData = () => {\n    const { query, imageData } = this.state\n    axios\n      .get(\n        `http://jsonplaceholder.typicode.com/photos?_start=${query._start}&_limit=${query._limit}`\n      )\n      .then((res) => {\n        this.setState({ imageData: [...imageData, ...res.data] })\n      })\n      .catch((e) => {\n        this.setState({ imageData: [] })\n        console.error(e)\n      })\n  }\n  render() {\n    const { compareData, imageData, query } = this.state\n\n    return imageData.length ? (\n      <Container>\n        <Grid container direction='column'>\n          <Grid item align='center'>\n            <Typography gutterBottom variant='h2' component='h2'>\n              I Program task\n            </Typography>\n          </Grid>\n          <Grid item>\n            <InfiniteList\n              setQuery={(query) =>\n                this.setState({ query }, () => {\n                  this.getApiData()\n                })\n              }\n              query={query}\n              imageData={imageData}\n              setCompareData={(compareData) => this.setState({ compareData })}\n              compareData={compareData}\n            />\n          </Grid>\n          {compareData.length ? (\n            <Grid item style={{ marginTop: '2em' }}>\n              <Typography gutterBottom variant='h5' component='h2'>\n                ComparisonTable\n              </Typography>\n              <ComparisonTable compareData={compareData} />\n            </Grid>\n          ) : null}\n        </Grid>\n      </Container>\n    ) : null\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}